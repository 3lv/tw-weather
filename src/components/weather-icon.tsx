import { cn } from '@/lib/utils';
const weatherCodeToEmoji = {
    0: {
        day: '‚òÄÔ∏è',
        night: 'üåô'
    },
    1: {
        day: 'üå§Ô∏è',
        night: 'üåô'
    },
    2: {
        day: '‚õÖ',
        night: '‚òÅÔ∏è'
    },
    3: '‚òÅÔ∏è',
    45: 'üå´Ô∏è',
    48: 'üå´Ô∏è',
    51: 'üåßÔ∏è',
    53: 'üåßÔ∏è',
    55: 'üåßÔ∏è',
    56: 'üåßÔ∏è',
    57: 'üåßÔ∏è',
    61: {
        day: 'üå¶Ô∏è',
        night: 'üåßÔ∏è'
    },
    63: 'üåßÔ∏è',
    65: 'üåßÔ∏è',
    66: 'üåßÔ∏è',
    67: 'üåßÔ∏è',
    71: 'üå®Ô∏è',
    73: '‚ùÑÔ∏è',
    75: '‚ùÑÔ∏è',
    77: '‚ùÑÔ∏è',
    80: 'üåßÔ∏è',
    81: 'üåßÔ∏è',
    82: 'üåßÔ∏è',
    85: '‚ùÑÔ∏è',
    86: '‚ùÑÔ∏è',
    95: '‚õàÔ∏è',
    96: '‚ö°',
    99: '‚ö°'
};
export const WeatherIcon = (param)=>{
    let { weatherCode, className, isNight } = param;
    // Look up the emoji based on the weather code
    const emojiEntry = weatherCodeToEmoji[weatherCode] || 'üå•Ô∏è'; // Default to a cloud emoji if not found
    let emoji;
    if (typeof emojiEntry === 'string') {
        emoji = emojiEntry;
    } else {
        emoji = isNight === true ? emojiEntry.night : emojiEntry.day;
    }
    return /*#__PURE__*/ _jsx("div", {
        className: cn('', className),
        children: emoji
    });
};