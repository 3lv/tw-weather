import { cn } from '@/lib/utils';
interface DayNight {
	day: string,
	night: string,
}
type Entry = DayNight | string;
const weatherCodeToEmoji: Record<number, string | DayNight> = {
  0: { day: '‚òÄÔ∏è', night: 'üåô' }, // Clear sky
  1: { day: 'üå§Ô∏è', night: 'üåô' },  // Mainly clear
  2: { day: '‚õÖ', night: '‚òÅÔ∏è' },  // Partly cloudy
  3: '‚òÅÔ∏è',   // Cloudy
  45: 'üå´Ô∏è',  // Fog
  48: 'üå´Ô∏è',  // Freezing fog
  51: 'üåßÔ∏è',  // Light drizzle
  53: 'üåßÔ∏è',  // Moderate drizzle
  55: 'üåßÔ∏è',  // Heavy drizzle
  56: 'üåßÔ∏è',  // Freezing drizzle
  57: 'üåßÔ∏è',  // Heavy freezing drizzle
  61: { day: 'üå¶Ô∏è', night: 'üåßÔ∏è' },  // Light rain
  63: 'üåßÔ∏è',  // Moderate rain
  65: 'üåßÔ∏è',  // Heavy rain
  66: 'üåßÔ∏è',  // Freezing rain
  67: 'üåßÔ∏è',  // Heavy freezing rain
  71: 'üå®Ô∏è',  // Light snow
  73: '‚ùÑÔ∏è',  // Moderate snow
  75: '‚ùÑÔ∏è',  // Heavy snow
  77: '‚ùÑÔ∏è',  // Snow grains
  80: 'üåßÔ∏è',  // Light shower rain
  81: 'üåßÔ∏è',  // Moderate shower rain
  82: 'üåßÔ∏è',  // Heavy shower rain
  85: '‚ùÑÔ∏è',  // Light snow showers
  86: '‚ùÑÔ∏è',  // Heavy snow showers
  95: '‚õàÔ∏è',  // Thunderstorm
  96: '‚ö°',   // Thunderstorm with hail
  99: '‚ö°',   // Severe thunderstorm with hail
};

interface WeatherIconProps {
	weatherCode: number,
	className?: string,
	isNight?: boolean,
}
export const WeatherIcon = ({weatherCode, className, isNight}: WeatherIconProps) => {
    // Look up the emoji based on the weather code
    const emojiEntry = weatherCodeToEmoji[weatherCode] || 'üå•Ô∏è'; // Default to a cloud emoji if not found
    let emoji;
    if (typeof emojiEntry === 'string') {
        emoji = emojiEntry;
    } else {
        emoji = isNight === true ? emojiEntry.night : emojiEntry.day;
    }
    return (
	    <div className={cn("", className)}>
		    {emoji}
	    </div>
    )
};
